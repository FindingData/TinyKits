///////////////////////////////////////////////////////////
//  SingleSqlParserFactory.cs
//  Implementation of the Class SingleSqlParserFactory
//  Generated by Enterprise Architect
//  Created on:      17-11ÔÂ-2018 15:26:08
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Text.RegularExpressions;

namespace FD.Tiny.Common.Utility.SqlParse {
    public class SingleSqlParserFactory
    {

        /// 
        /// <param name="sql"></param>
        public static BaseSingleSqlParser GenerateParser(string sql)
        {
            if (Contains(sql, "(select)(.+)(from)(.+)"))
            {
                return new SelectSqlParser(sql);
            }
            return new SelectSqlParser(sql);
        }

        /// 
        /// <param name="sql"></param>
        /// <param name="regExp"></param>
        public static bool Contains(string sql, string regExp)
        {
            var regex = new Regex(regExp, RegexOptions.IgnoreCase);
            return regex.IsMatch(sql);
        }

    }//end SingleSqlParserFactory

}//end namespace SqlParse