///////////////////////////////////////////////////////////
//  SqlSegment.cs
//  Implementation of the Class SqlSegment
//  Generated by Enterprise Architect
//  Created on:      17-11月-2018 15:26:09
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Text.RegularExpressions;
using System.Linq;

namespace FD.Tiny.Common.Utility.SqlParse {
    public class SqlSegment
    {

        /// <summary>
        /// 回车换行
        /// </summary>
        private static string Crlf = "\r\n";
        private static string FourSpace = "    ";

        /// 
        /// <param name="segmentRegExp"></param>
        /// <param name="bodySplitPattern"></param>
        public SqlSegment(string segmentRegExp, string bodySplitPattern)
        {
            Start = "";
            Body = "";
            End = "";
            this.SegmentRegExp = segmentRegExp;
            this.BodySplitPattern = bodySplitPattern;            
            this.BodyPieces = new List<string>();
        }
        

        /// <summary>
        /// sql语句片段开头
        /// </summary>
        public string Start
        {
            get; set;
        }

        /// <summary>
        /// sql语句片段中间
        /// </summary>
        public string Body
        {
            get; set;
        }

        /// <summary>
        /// sql语句片段结束
        /// </summary>
        public string End
        {
            get; set;
        }

        

        /// <summary>
        /// 片段正则表达式
        /// </summary>
        public string SegmentRegExp
        {
            get; set;
        }

        /// <summary>
        /// 分割后的body小片段
        /// </summary>
        public List<string> BodyPieces
        {
            get; set;
        }

        /// <summary>
        /// 分割中间部分正则
        /// </summary>
        public string BodySplitPattern
        {
            get; set;
        }

        

        /// <summary>
        /// 从sql中查找符合segmentRegExp的部分,并赋值到start,body,end三个属性中
        /// </summary>
        /// <param name="sql"></param>
        public void Parse(string sql)
        {
            var reg = new Regex(SegmentRegExp, RegexOptions.IgnoreCase);
            if (reg.IsMatch(sql))
            {
                var m = reg.Match(sql);
                Start = m.Groups[1].Value;
                Body = m.Groups[2].Value;
                End = m.Groups[3].Value;
                ParseBody();
            }

            //for (int i = 0; i <= sql.Length; i++)
            //{
            //    var shortSql = sql.Substring(0, i);
            //    if (reg.IsMatch(shortSql))
            //    {
            //        var m = reg.Match(shortSql);
            //        Start = m.Groups[1].Value;
            //        Body = m.Groups[2].Value;
            //        End = m.Groups[3].Value;
            //        ParseBody();
            //        return;
            //    }                                                
            //}            
        }

        /// <summary>
        /// 解析body片段
        /// </summary>
        public void ParseBody()
        {

            Regex reg = new Regex(BodySplitPattern, RegexOptions.IgnoreCase);
            Body = Body.Trim();
            var result = reg.Replace(Body, "$1" + Crlf);
            var arr = result.Split(Crlf.ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
            BodyPieces = arr.Select(a => FourSpace + a).ToList();
        }

        /// <summary>
        /// 获取解析好的sql片段
        /// </summary>
        public string GetParsedSqlSegment()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append(Start + Crlf);
            foreach (var piece in BodyPieces)
            {
                sb.Append(piece + Crlf);
            }
            return sb.ToString();
        }

    }//end SqlSegment


}//end namespace SqlParse