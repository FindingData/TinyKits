///////////////////////////////////////////////////////////
//  Condition.cs
//  Implementation of the Class Condition
//  Generated by Enterprise Architect
//  Created on:      22-10月-2018 16:12:33
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;



using FD.Tiny.FormBuilder;
using System.Text.RegularExpressions;
using FD.Tiny.Common.Utility.Calc;

namespace FD.Tiny.FormBuilder {
	/// <summary>
	/// 条件类
	/// </summary>
	public class Condition {

        private const string CONDTION_PATTERN = @"(?<=@)[\w\W]+?(?=[\W])";

        /// <summary>
        /// 条件表达式
        /// </summary>
        public string condition_expr{
			get;
					set;
		}

		public ConditionItem condition_item{
			get;
			set;
		}
       
        public IEnumerable<string> ExtractAllOperand()
        {
            var matchs = Regex.Matches(this.condition_expr, @"(?<=@)[\w\W]+?(?=[\W])");
            foreach (Match match in matchs)
            {
                yield return match.Value;
            }            
        }

        public bool ExecuteExpression(Func<string, string> getVal)
        {
            var expr = condition_expr;           
            var operands = ExtractAllOperand();
            foreach (var operand in operands)
            {
                expr = expr.Replace($"@{operand}", getVal(operand));
            }
            if (expr.Contains("@"))
                return false;
            bool.TryParse(CalcStringExpression.CalcByJs(expr), out var result);
            return result;
        }

        


    }//end Condition

}//end namespace FD.Tiny.FormBuilder