///////////////////////////////////////////////////////////
//  ConditionVariable.cs
//  Implementation of the Class ConditionVariable
//  Generated by Enterprise Architect
//  Created on:      23-10ÔÂ-2018 15:44:44
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Text.RegularExpressions;
using FD.Tiny.Common.Utility.Calc;

namespace FD.Tiny.FormBuilder {
	public class ConditionVariable : FormVariable {


        public ConditionVariable()
        {
            this.variable_type = VariableType.Condition;
        }

		public List<Condition> condition_list{
			get;
			set;
		}             

        public override string GetValue(Func<string, string> val)
        {
            foreach (var condition in condition_list)
            {
                this.inner_value = condition.condition_expr;

                if (BoolExpression(val))
                {
                    if (condition.condition_item.value_method == ValueMethod.Const)
                    {
                        return condition.condition_item.inner_value;
                    }
                    else
                    {
                        this.inner_value = condition.condition_item.inner_value;
                        
                        return CalcExpression(val);
                    }
                }
            }
            return string.Empty;
        }

    }//end ConditionVariable

}//end namespace Variable