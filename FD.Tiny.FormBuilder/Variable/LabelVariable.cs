///////////////////////////////////////////////////////////
//  LabelVariable.cs
//  Implementation of the Class LabelVariable
//  Generated by Enterprise Architect
//  Created on:      23-10ÔÂ-2018 9:05:48
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using FD.Tiny.FormBuilder;
using FD.Tiny.Common.Utility.Calc;
using System.Text.RegularExpressions;

namespace FD.Tiny.FormBuilder {
	public class LabelVariable : FormVariable {

        public LabelVariable()
        {
            this.variable_type = VariableType.Label;
        }

		public ValueMethod value_method{
			get;
			set;
		}

		public string inner_value{
			get;
			set;
		}

        public virtual IEnumerable<string> ExtractAllOperand()
        {
            var matchs = Regex.Matches(this.inner_value, EXPR_PATTERN);
            foreach (Match match in matchs)
            {
                yield return match.Value;
            }
        }

        public override string GetValue(Func<string, string> getVal)
        {
            if (value_method == ValueMethod.Const)
            {
                return inner_value;
            }
            else
            {
                var expr = inner_value;
                var operands = ExtractAllOperand();
                foreach (var operand in operands)
                {
                    var val = getVal(operand);
                    expr = expr.Replace($"@{operand}", Regex.IsMatch(val, @"^\d+$") ? val : $"'{val}'");
                }

                inner_value = CalcStringExpression.CalcByJs(expr);
                return inner_value;
            }
            
        }

    }//end LabelVariable

}//end namespace Variable